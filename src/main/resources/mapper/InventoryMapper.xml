<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.aftersale.mapper.InventoryMapper">
    <resultMap id="BaseResultMap" type="com.abc.aftersale.entity.Inventory">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="inventory_name" jdbcType="VARCHAR" property="inventoryName" />
        <result column="inventory_class" jdbcType="VARCHAR" property="inventoryClass" />
        <result column="inventory_number" jdbcType="INTEGER" property="inventoryNumber" />
        <result column="inventory_price" jdbcType="DECIMAL" property="inventoryPrice" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, inventory_name, inventory_class, inventory_number, inventory_price, create_time,
    update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from inventory
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from inventory
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insertSelective" parameterType="com.abc.aftersale.entity.Inventory">
        insert into inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="inventoryName != null">
                inventory_name,
            </if>
            <if test="inventoryClass != null">
                inventory_class,
            </if>
            <if test="inventoryNumber != null">
                inventory_number,
            </if>
            <if test="inventoryPrice != null">
                inventory_price,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="inventoryName != null">
                #{inventoryName,jdbcType=VARCHAR},
            </if>
            <if test="inventoryClass != null">
                #{inventoryClass,jdbcType=VARCHAR},
            </if>
            <if test="inventoryNumber != null">
                #{inventoryNumber,jdbcType=INTEGER},
            </if>
            <if test="inventoryPrice != null">
                #{inventoryPrice,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByExampleSelective" parameterType="map">
        update inventory
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.inventoryName != null">
                inventory_name = #{record.inventoryName,jdbcType=VARCHAR},
            </if>
            <if test="record.inventoryClass != null">
                inventory_class = #{record.inventoryClass,jdbcType=VARCHAR},
            </if>
            <if test="record.inventoryNumber != null">
                inventory_number = #{record.inventoryNumber,jdbcType=INTEGER},
            </if>
            <if test="record.inventoryPrice != null">
                inventory_price = #{record.inventoryPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update inventory
        set id = #{record.id,jdbcType=INTEGER},
        inventory_name = #{record.inventoryName,jdbcType=VARCHAR},
        inventory_class = #{record.inventoryClass,jdbcType=VARCHAR},
        inventory_number = #{record.inventoryNumber,jdbcType=INTEGER},
        inventory_price = #{record.inventoryPrice,jdbcType=DECIMAL},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.abc.aftersale.entity.Inventory">
        update inventory
        <set>
            <if test="inventoryName != null">
                inventory_name = #{inventoryName,jdbcType=VARCHAR},
            </if>
            <if test="inventoryClass != null">
                inventory_class = #{inventoryClass,jdbcType=VARCHAR},
            </if>
            <if test="inventoryNumber != null">
                inventory_number = #{inventoryNumber,jdbcType=INTEGER},
            </if>
            <if test="inventoryPrice != null">
                inventory_price = #{inventoryPrice,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.abc.aftersale.entity.Inventory">
        update inventory
        set inventory_name = #{inventoryName,jdbcType=VARCHAR},
            inventory_class = #{inventoryClass,jdbcType=VARCHAR},
            inventory_number = #{inventoryNumber,jdbcType=INTEGER},
            inventory_price = #{inventoryPrice,jdbcType=DECIMAL},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findByInventoryNameAndClass" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from inventory
        where inventory_name = #{inventoryName,jdbcType=VARCHAR} AND inventory_class = #{inventoryClass,jdbcType=VARCHAR}
    </select>
</mapper>