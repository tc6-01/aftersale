<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<?xml version="1.0" encoding="UTF-8" ?>-->
<!--<!DOCTYPE mapper-->
<!--        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"-->
<!--        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">-->

<!--<mapper namespace="com.abc.aftersale.mapper.OrderMapper">-->

<!--</mapper>-->


<mapper namespace="com.abc.aftersale.mapper.OrderMapper">
<resultMap id="BaseResultMap" type="com.abc.aftersale.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="product_info" jdbcType="VARCHAR" property="productInfo" />
    <result column="sn_info" jdbcType="VARCHAR" property="snInfo" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="user_desc" jdbcType="VARCHAR" property="userDesc" />
    <result column="invoice_info" jdbcType="VARCHAR" property="invoiceInfo" />
    <result column="engineer_id" jdbcType="INTEGER" property="engineerId" />
    <result column="engineer_desc" jdbcType="VARCHAR" property="engineerDesc" />
    <result column="pred_cost" jdbcType="DECIMAL" property="predCost" />
    <result column="real_cost" jdbcType="DECIMAL" property="realCost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
</resultMap>
<sql id="Example_Where_Clause">
    <where>
        <foreach collection="oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </where>
</sql>
<sql id="Update_By_Example_Where_Clause">
    <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </where>
</sql>
<sql id="Base_Column_List">
    id, user_id, user_name, user_phone, user_address, product_info, sn_info, status,
    user_desc, invoice_info, engineer_id, engineer_desc, pred_cost, real_cost, create_time,
    update_time
</sql>

<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
</select>
<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
</delete>

<insert id="insert" parameterType="com.abc.aftersale.entity.Order">
    insert into `order` (id, user_id, user_name,
                       user_phone, user_address, product_info,
                       sn_info, status, user_desc,
                       invoice_info, engineer_id, engineer_desc,
                       pred_cost, real_cost, create_time,
                       update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
            #{userPhone,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR}, #{productInfo,jdbcType=VARCHAR},
            #{snInfo,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{userDesc,jdbcType=VARCHAR},
            #{invoiceInfo,jdbcType=VARCHAR}, #{engineerId,jdbcType=INTEGER}, #{engineerDesc,jdbcType=VARCHAR},
            #{predCost,jdbcType=DECIMAL}, #{realCost,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP})
</insert>
<insert id="insertSelective" parameterType="com.abc.aftersale.entity.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
            id,
        </if>
        <if test="userId != null">
            user_id,
        </if>
        <if test="userName != null">
            user_name,
        </if>
        <if test="userPhone != null">
            user_phone,
        </if>
        <if test="userAddress != null">
            user_address,
        </if>
        <if test="productInfo != null">
            product_info,
        </if>
        <if test="snInfo != null">
            sn_info,
        </if>
        <if test="status != null">
            status,
        </if>
        <if test="userDesc != null">
            user_desc,
        </if>
        <if test="invoiceInfo != null">
            invoice_info,
        </if>
        <if test="engineerId != null">
            engineer_id,
        </if>
        <if test="engineerDesc != null">
            engineer_desc,
        </if>
        <if test="predCost != null">
            pred_cost,
        </if>
        <if test="realCost != null">
            real_cost,
        </if>
        <if test="createTime != null">
            create_time,
        </if>
        <if test="updateTime != null">
            update_time,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
            #{id,jdbcType=INTEGER},
        </if>
        <if test="userId != null">
            #{userId,jdbcType=INTEGER},
        </if>
        <if test="userName != null">
            #{userName,jdbcType=VARCHAR},
        </if>
        <if test="userPhone != null">
            #{userPhone,jdbcType=VARCHAR},
        </if>
        <if test="userAddress != null">
            #{userAddress,jdbcType=VARCHAR},
        </if>
        <if test="productInfo != null">
            #{productInfo,jdbcType=VARCHAR},
        </if>
        <if test="snInfo != null">
            #{snInfo,jdbcType=VARCHAR},
        </if>
        <if test="status != null">
            #{status,jdbcType=BIT},
        </if>
        <if test="userDesc != null">
            #{userDesc,jdbcType=VARCHAR},
        </if>
        <if test="invoiceInfo != null">
            #{invoiceInfo,jdbcType=VARCHAR},
        </if>
        <if test="engineerId != null">
            #{engineerId,jdbcType=INTEGER},
        </if>
        <if test="engineerDesc != null">
            #{engineerDesc,jdbcType=VARCHAR},
        </if>
        <if test="predCost != null">
            #{predCost,jdbcType=DECIMAL},
        </if>
        <if test="realCost != null">
            #{realCost,jdbcType=DECIMAL},
        </if>
        <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateTime != null">
            #{updateTime,jdbcType=TIMESTAMP},
        </if>
    </trim>
</insert>

<update id="updateByExampleSelective" parameterType="map">
    update `order`
    <set>
        <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
        </if>
        <if test="record.userId != null">
            user_id = #{record.userId,jdbcType=INTEGER},
        </if>
        <if test="record.userName != null">
            user_name = #{record.userName,jdbcType=VARCHAR},
        </if>
        <if test="record.userPhone != null">
            user_phone = #{record.userPhone,jdbcType=VARCHAR},
        </if>
        <if test="record.userAddress != null">
            user_address = #{record.userAddress,jdbcType=VARCHAR},
        </if>
        <if test="record.productInfo != null">
            product_info = #{record.productInfo,jdbcType=VARCHAR},
        </if>
        <if test="record.snInfo != null">
            sn_info = #{record.snInfo,jdbcType=VARCHAR},
        </if>
        <if test="record.status != null">
            status = #{record.status,jdbcType=BIT},
        </if>
        <if test="record.userDesc != null">
            user_desc = #{record.userDesc,jdbcType=VARCHAR},
        </if>
        <if test="record.invoiceInfo != null">
            invoice_info = #{record.invoiceInfo,jdbcType=VARCHAR},
        </if>
        <if test="record.engineerId != null">
            engineer_id = #{record.engineerId,jdbcType=INTEGER},
        </if>
        <if test="record.engineerDesc != null">
            engineer_desc = #{record.engineerDesc,jdbcType=VARCHAR},
        </if>
        <if test="record.predCost != null">
            pred_cost = #{record.predCost,jdbcType=DECIMAL},
        </if>
        <if test="record.realCost != null">
            real_cost = #{record.realCost,jdbcType=DECIMAL},
        </if>
        <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        </if>
    </set>
    <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
    </if>
</update>
<update id="updateByExample" parameterType="map">
    update `order`
    set id = #{record.id,jdbcType=INTEGER},
    user_id = #{record.userId,jdbcType=INTEGER},
    user_name = #{record.userName,jdbcType=VARCHAR},
    user_phone = #{record.userPhone,jdbcType=VARCHAR},
    user_address = #{record.userAddress,jdbcType=VARCHAR},
    product_info = #{record.productInfo,jdbcType=VARCHAR},
    sn_info = #{record.snInfo,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=BIT},
    user_desc = #{record.userDesc,jdbcType=VARCHAR},
    invoice_info = #{record.invoiceInfo,jdbcType=VARCHAR},
    engineer_id = #{record.engineerId,jdbcType=INTEGER},
    engineer_desc = #{record.engineerDesc,jdbcType=VARCHAR},
    pred_cost = #{record.predCost,jdbcType=DECIMAL},
    real_cost = #{record.realCost,jdbcType=DECIMAL},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
    </if>
</update>
<update id="updateByPrimaryKeySelective" parameterType="com.abc.aftersale.entity.Order">
    update `order`
    <set>
        <if test="userId != null">
            user_id = #{userId,jdbcType=INTEGER},
        </if>
        <if test="userName != null">
            user_name = #{userName,jdbcType=VARCHAR},
        </if>
        <if test="userPhone != null">
            user_phone = #{userPhone,jdbcType=VARCHAR},
        </if>
        <if test="userAddress != null">
            user_address = #{userAddress,jdbcType=VARCHAR},
        </if>
        <if test="productInfo != null">
            product_info = #{productInfo,jdbcType=VARCHAR},
        </if>
        <if test="snInfo != null">
            sn_info = #{snInfo,jdbcType=VARCHAR},
        </if>
        <if test="status != null">
            status = #{status,jdbcType=BIT},
        </if>
        <if test="userDesc != null">
            user_desc = #{userDesc,jdbcType=VARCHAR},
        </if>
        <if test="invoiceInfo != null">
            invoice_info = #{invoiceInfo,jdbcType=VARCHAR},
        </if>
        <if test="engineerId != null">
            engineer_id = #{engineerId,jdbcType=INTEGER},
        </if>
        <if test="engineerDesc != null">
            engineer_desc = #{engineerDesc,jdbcType=VARCHAR},
        </if>
        <if test="predCost != null">
            pred_cost = #{predCost,jdbcType=DECIMAL},
        </if>
        <if test="realCost != null">
            real_cost = #{realCost,jdbcType=DECIMAL},
        </if>
        <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
</update>
<update id="updateByPrimaryKey" parameterType="com.abc.aftersale.entity.Order">
    update `order`
    set user_id = #{userId,jdbcType=INTEGER},
        user_name = #{userName,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=VARCHAR},
        user_address = #{userAddress,jdbcType=VARCHAR},
        product_info = #{productInfo,jdbcType=VARCHAR},
        sn_info = #{snInfo,jdbcType=VARCHAR},
        status = #{status,jdbcType=BIT},
        user_desc = #{userDesc,jdbcType=VARCHAR},
        invoice_info = #{invoiceInfo,jdbcType=VARCHAR},
        engineer_id = #{engineerId,jdbcType=INTEGER},
        engineer_desc = #{engineerDesc,jdbcType=VARCHAR},
        pred_cost = #{predCost,jdbcType=DECIMAL},
        real_cost = #{realCost,jdbcType=DECIMAL},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
</update>

    <select id="selectById" resultType="com.abc.aftersale.entity.Order">
        select *
        from `order`
        where id = #{id,jdbcType=INTEGER};
    </select>

    <update id="updateById" parameterType="com.abc.aftersale.entity.Order">
        update `order`
        set user_id = #{userId,jdbcType=INTEGER},
            user_name = #{userName,jdbcType=VARCHAR},
            where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>